import { getSingleProduct } from 'API/api';
import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';

export const ProductDetails = () => {
  const { id } = useParams();
  const [product, setProducts] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  useEffect(() => {
    const fetchProduct = async () => {
      const numericId = Number(id); // üîß –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ id —É —á–∏—Å–ª–æ

      // ‚ùå –Ø–∫—â–æ NaN (–Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ id) ‚Äî –Ω–µ –≤–∏–∫–ª–∏–∫–∞—î–º–æ API
      if (isNaN(numericId)) {
        console.error('ID –Ω–µ —î —á–∏—Å–ª–æ–º:', id);
        return;
      }
      setIsLoading(true);
      try {
        const data = await getSingleProduct(id);
        setProducts(data);
        console.log(data);
      } catch (error) {
        console.error(error);
      } finally {
        setIsLoading(false);
      }
    };

    if (id) {
      fetchProduct();
    }
  }, [id]);

  return (
    <div>
      {isLoading ? (
        <p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
      ) : product ? (
        <div>
          <h2>{product.title}</h2>
          <p>{product.description}</p>
          {product.images && product.images.length > 0 && (
            <img src={product.images[0]} alt={product.title} width={200} />
          )}
        </div>
      ) : (
        <p>–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</p>
      )}
    </div>
  );
};
